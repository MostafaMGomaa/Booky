extends base
include _bookCol

mixin reviewCard(name, photo, rating, review, createdAt)
    .review.border.border-2.border-start-0.border-end-0.p-3.border-top-0.bg-light.shadow.mb-3.bg-body
        h5.review-user__info.review-owner.p-2
            img.user-avatar.review-user__info-avatar.rounded-circle.me-2(src=`/img/user/${photo}`, alt=name)
            | #{name} 
            span.review-user__info-rate.text-black-50
                i.fa-solid.fa-star
                |  #{rating.toFixed(1)} 
        .review-body.ms-5.mb-3
            p.review-decription.mb-3= review
            p.publish-from.text-black-50= `Published  ${createdAt.toLocaleString('en-us', {month: "long", year: "numeric"})}`  

block content
    // Book
    .container.mt-5
        .row
            .book-thumbnail.col.col-lg-3.text-center
                img.shadow-lg.p-3.mb-5.bg-body.rounded(crossorigin="anonymous" src=`/img/books/${book.slug}.jpg`, alt=`${book.slug}`)

            .book-info.col.col-lg-9
                .book-qucik-info.p-3
                    h2.book-main-title.sw-bold.d-lg-inlines= book.title

                    h6.byAtuhor.text-black-50
                        | by 
                        span= book.authors
                    span.d-lg-inline.text-black-50=book.publishedDate.toLocaleString('en-us', {month: "long", year: "numeric"})
                    .list-group-item.card-rating
                        .card-rating-stars.d-lg-inline
                            spnan.text-warning #{book.ratingsAverage} 
                            i.fa-solid.fa-star

                        span.card-rating-avg.text-black-50= `(${book.ratingsQuantity})`

                .book-price.mt-4
                    .book-format
                        h5
                            | Paperback 
                            span.text-black-50 (Reprint)
                        - if(book.discountRate)     
                            p.oldprice.d-lg-inline.text-decoration-line-through.text-black-50=`$${book.price}`
                        - let newPrice = (book.price- (book.price / 100 * book.discountRate)).toFixed(0)
                        p.newprice.d-lg-inline.ms-sm-2=`$${newPrice}` 
                    button.btn.btn-addChart.btn-success.btn-main.text-uppercase.mt-3
                        i.fa-solid.fa-cart-plus
                        |  Add to Chart

                .description.mt-4
                    h4.text-warning.text-uppercase description
                    p.short-description-txt.text-black-50= book.shortDescription


    // Related Books
    .container.text-center.books-container.mt-5
        .row.books-row
            a.link-dark(href='', style='text-decoration: none')
                h2.books-categories-title.mb-5.p-1.border.border-2.border-start-0.border-end-0.text-uppercase.text-info
                    | Books you might like

            .books-holder.card-group.overflow-auto.d-flex.flex-nowrap
                button.btn.btn-arrow.books-holder-left-arrow-btn.rounded-circle.shadow-lg.p-3.mb-5.bg-white.rounded
                    i.fa-solid.fa-angle-left

                each rBook in book.relatedBooks
                    - let newPriceR = (rBook.price- (rBook.price / 100 * rBook.discountRate)).toFixed(0)
                    +bookCol(rBook.slug, rBook.title, rBook.ratingsQuantity, rBook.price, newPriceR, rBook.discountRate, rBook.ratingsAverage)

                button.btn.btn-arrow.books-holder-right-arrow-btn.rounded-circle.shadow-lg.p-3.mb-5.bg-white.rounded
                    i.fa-solid.fa-angle-right

    // Book details
    div
        h4.book-details-title.text-center.text-warning.text-capitalize.p-1.border.border-start-0.border-end-0
            | book details
        .container.text-center
            .book-details__el.book-details__el-status.row.text-capitalize.text-dark.m-1.mt-0.mb-0.p-1
                p.col.details__el-status-key.text-end status:
                p.col.details__el-status-value.text-start.p-3=book.status
            .book-details__el.book-details__el-isbn.row.text-capitalize.text-dark.m-1.mt-0.mb-0.p-1
                p.col.details__el-isbn-key.text-end isbn:
                p.col.details__el-isbn-value.text-start.p-3.text-warning= book.isbn
            .book-details__el.book-details__el-pageCount.row.text-capitalize.text-dark.m-1.mt-0.mb-0.p-1
                p.col.details__el-pageCount-key.text-end Page Count:
                p.col.details__el-pageCount-value.text-start.p-3= book.pageCount
            .book-details__el.book-details__el-publishedDate.row.text-capitalize.text-dark.m-1.mt-0.mb-0.p-1
                p.col.details__el-publishedDate-key.text-end
                    | Published Date:
                - const date = book.publishedDate.toLocaleString('en-us', {month: "long", year: "numeric"})
                p.col.details__el-publishedDate-value.text-start.p-3= date

            .book-details__el.book-details__el-authors.row.text-capitalize.text-dark.m-1.mt-0.mb-0.p-1
                p.col.details__el-authors-key.text-end Authors:
                p.col.details__el-authors-value.text-start.p-3= book.authors


    // Reviews
    - if(book.reviews.length > 0)
        .reviews.mb-5
            h4.border.border-end-0.border-start-0.p-2.m-5.text-warning.text-center= `${book.reviews.length} Reviews`

            .container.reviews-container.mb-5             
                each r in book.reviews
                 +reviewCard(r.user.name, r.user.photo, r.rating, r.review, r.createdAt)

            .review-form
                p.text-center.text-capitalize.text-danger
                    | Sorry, review product feature via UI doesn&apos;t available yet
                    